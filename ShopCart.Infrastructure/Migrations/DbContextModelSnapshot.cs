// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopCart.Infrastructure;

#nullable disable

namespace ShopCart.Infrastructure.Migrations
{
    [DbContext(typeof(DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.CartItemSqlServerDatamodel", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems", (string)null);
                });

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.CartSqlServerDatamodel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiscountCode");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.DiscountSqlServerDatamodel", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("Discounts", (string)null);

                    b.HasData(
                        new
                        {
                            Code = "WELCOME10",
                            Type = 1,
                            Value = 10.00m
                        },
                        new
                        {
                            Code = "SUMMER20",
                            Type = 0,
                            Value = 20.00m
                        },
                        new
                        {
                            Code = "FIXED50",
                            Type = 1,
                            Value = 50.00m
                        });
                });

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.ProductSqlServerDatamodel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Wireless Mouse",
                            Price = 99.90m
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Mechanical Keyboard",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Name = "USB-C Hub",
                            Price = 89.00m
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Name = "HD Webcam",
                            Price = 180.00m
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Name = "Noise Cancelling Headphones",
                            Price = 520.50m
                        });
                });

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.CartItemSqlServerDatamodel", b =>
                {
                    b.HasOne("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.CartSqlServerDatamodel", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.ProductSqlServerDatamodel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.CartSqlServerDatamodel", b =>
                {
                    b.HasOne("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.DiscountSqlServerDatamodel", "AppliedDiscount")
                        .WithMany()
                        .HasForeignKey("DiscountCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AppliedDiscount");
                });

            modelBuilder.Entity("ShopCart.Infrastructure.Repositories.Datasource.SqlServerDataSource.SqlServerDataModel.CartSqlServerDatamodel", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
